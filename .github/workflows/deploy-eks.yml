name: deploy to eks

on:
  workflow_call:
    inputs:
      image_tag:
        description: 배포할 이미지
        required: true
        type: string
      stage:
        description: 스테이지
        type: string
      service_name:
        description: 서비스 이름
        required: true
        type: string
      branch:
        description: 브랜치
        type: string
      slack_notify_channel:
        description: 슬랙 알림 채널
        required: true
        type: string
      slack_thread_key:
        description: 슬랙 메시지 갱신을 위한 키
        type: string
    secrets:
      GITHUB_BOT_TOKEN:
        required: true
      SLACK_POST_MESSAGE_URL:
        required: true
      SLACK_POST_MESSAGE_TOKEN:
        required: true

jobs:
  deploy:
    name: deploy ${{ inputs.branch }} to ${{ inputs.stage }}
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Notify deploy start
        run: |
          curl -X POST "${{ secrets.SLACK_POST_MESSAGE_URL }}" -H 'Authorization: Bearer ${{ secrets.SLACK_POST_MESSAGE_TOKEN }}' -H 'Content-Type: application/json' --data-raw '
            {
              "thread_key": "${{ inputs.slack_thread_key }}",
              "channel": "${{ inputs.slack_notify_channel }}",
              "text": "*[${{ inputs.stage }}] ${{ inputs.service_name }} 배포 알림*",
              "attachments": [
                {
                  "color": "#36C5F0",
                  "blocks": [
                    {
                      "type": "section",
                      "fields": [
                        { "type": "mrkdwn", "text": "*배포상태:*\n이미지 배포 시작" },
                        { "type": "mrkdwn", "text": "*브랜치:*\n${{ inputs.branch }}" },
                        { "type": "mrkdwn", "text": "*요청자:*\n${{ inputs.user_name }}" }
                      ]
                    }
                  ]
                }
              ]
            }
          '

      - name: Clone Deploy reposiory
        uses: actions/checkout@v2
        with:
          repository: croquiscom/zigzag-deploy
          ref: 'main'
          token: ${{ secrets.GITHUB_BOT_TOKEN }}

      - name: Image Tag Change
        uses: mikefarah/yq@v4.9.6
        with:
          cmd: yq e --inplace '.image.tag = "${{ inputs.image_tag }}"' services/${{ inputs.service_name }}/values-${{ inputs.stage }}.yaml

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_BOT_TOKEN }}
          author: sre-croquis <sre-croquis@users.noreply.github.com>
          commit-message: 'deploy: ${{ inputs.stage }}-zigzag-${{ inputs.service_name }}-${{ inputs.image_tag }}'
          base: main
          branch: ${{ inputs.stage }}-zigzag-${{ inputs.service_name }}-${{ inputs.image_tag }}
          title: '[Deploy-${{ inputs.stage }}] zigzag-${{ inputs.service_name }}'
          body: |
            ## Service
            - ${{ inputs.service_name }}
            ## Stage
            - ${{ inputs.stage }}
            ## Docker Image
            - ${{ inputs.image_tag }}
          labels: |
            automerge

      - name: Notify deploy success
        if: success()
        run: |
          curl -X POST "${{ secrets.SLACK_POST_MESSAGE_URL }}" -H 'Authorization: Bearer ${{ secrets.SLACK_POST_MESSAGE_TOKEN }}' -H 'Content-Type: application/json' --data-raw '
            {
              "thread_key": "${{ inputs.slack_thread_key }}",
              "channel": "${{ inputs.slack_notify_channel }}",
              "text": "*[${{ inputs.stage }}] ${{ inputs.service_name }} 배포 알림*",
              "attachments": [
                {
                  "color": "#2EB67D",
                  "blocks": [
                    {
                      "type": "section",
                      "fields": [
                        { "type": "mrkdwn", "text": "*배포상태:*\n이미지 배포 성공" },
                        { "type": "mrkdwn", "text": "*브랜치:*\n${{ inputs.branch }}" },
                        { "type": "mrkdwn", "text": "*요청자:*\n${{ inputs.user_name }}" }
                      ]
                    }
                  ]
                }
              ]
            }
          '

      - name: Notify deploy fail
        if: failure()
        run: |
          curl -X POST "${{ secrets.SLACK_POST_MESSAGE_URL }}" -H 'Authorization: Bearer ${{ secrets.SLACK_POST_MESSAGE_TOKEN }}' -H 'Content-Type: application/json' --data-raw '
            {
              "thread_key": "${{ inputs.slack_thread_key }}",
              "channel": "${{ inputs.slack_notify_channel }}",
              "text": "*[${{ inputs.stage }}] ${{ inputs.service_name }} 배포 알림*",
              "attachments": [
                {
                  "color": "#E01E5A",
                  "blocks": [
                    {
                      "type": "section",
                      "fields": [
                        { "type": "mrkdwn", "text": "*배포상태:*\n이미지 배포 실패" },
                        { "type": "mrkdwn", "text": "*브랜치:*\n${{ inputs.branch }}" },
                        { "type": "mrkdwn", "text": "*요청자:*\n${{ inputs.user_name }}" }
                      ]
                    }
                  ]
                }
              ]
            }
          '
